/*
 * Copyright (c) 2023 Raspberry Pi (Trading) Ltd.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */
#pragma once

#ifndef BOOTROM_ASSERT_DEFAULT_ENABLE
#define BOOTROM_ASSERT_DEFAULT_ENABLE 0
#endif

#ifndef BOOTROM_ASSERT_ALL_ENABLE
#define BOOTROM_ASSERT_ALL_ENABLE 0
#endif

#ifndef BOOTROM_ASSERT_ALL_DISABLE
#define BOOTROM_ASSERT_ALL_DISABLE 0
#endif

#define BOOTROM_ASSERTIONS_ENABLED(x) ((BOOTROM_ASSERT_ ## x ## _ENABLE || BOOTROM_ASSERT_ALL_ENABLE) && !BOOTROM_ASSERT_ALL_DISABLE)

#ifndef BOOTROM_ASSERT_USB_ENABLE
#define BOOTROM_ASSERT_USB_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_GENERIC_FLASH_ENABLE
#define BOOTROM_ASSERT_GENERIC_FLASH_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_FLASH_BOOT_ENABLE
#define BOOTROM_ASSERT_FLASH_BOOT_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_RAM_BOOT_ENABLE
#define BOOTROM_ASSERT_RAM_BOOT_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_BLOCK_SCAN_ENABLE
#define BOOTROM_ASSERT_BLOCK_SCAN_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_MISC_ENABLE
#define BOOTROM_ASSERT_MISC_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_UF2_ENABLE
#define BOOTROM_ASSERT_UF2_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_NSBOOT_ENABLE
#define BOOTROM_ASSERT_NSBOOT_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_PICOBOOT_ENABLE
#define BOOTROM_ASSERT_PICOBOOT_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_FLASH_ENABLE
#define BOOTROM_ASSERT_FLASH_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_SWEETB_ENABLE
#define BOOTROM_ASSERT_SWEETB_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_PARTITION_TABLE_ENABLE
#define BOOTROM_ASSERT_PARTITION_TABLE_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_IMAGE_BOOT_ENABLE
#define BOOTROM_ASSERT_IMAGE_BOOT_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif

#ifndef BOOTROM_ASSERT_FLASH_PERMISSIONS_ENABLE
#define BOOTROM_ASSERT_FLASH_PERMISSIONS_ENABLE BOOTROM_ASSERT_DEFAULT_ENABLE
#endif
#ifndef __ASSEMBLER__
#include <assert.h>
#if !SB_TEST
#undef assert
void dont_use_regular_assert(bool);
#define assert dont_use_regular_assert
#endif
#if !BOOTROM_ASSERT_DISABLED
void __attribute__((noreturn)) bootrom_assertion_failure(const char *fn, uint line);

#define bootrom_assert(w, condition) ({ \
    if (BOOTROM_ASSERTIONS_ENABLED(w) && !(condition)) { \
        bootrom_assertion_failure(__FILE__, __LINE__);                                       \
    }                                    \
})
#else
#define bootrom_assert(w, condition) ((void)0)
#endif

#endif
